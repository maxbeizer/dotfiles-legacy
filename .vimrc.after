set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-ragtag'
" Plugin 'tpope/vim-rails'
Plugin 'scrooloose/nerdcommenter'
Plugin 'Townk/vim-autoclose'
Plugin 'othree/html5.vim'
Plugin 'mattn/webapi-vim'
Plugin 'mattn/gist-vim'
Plugin 'godlygeek/tabular'
call vundle#end()            " required
filetype plugin indent on    " required

syntax enable
set background=dark
let g:solarized_termtrans=1
let g:solarized_termcolors=256
let g:solarized_contrast="high"
let g:solarized_visibility="high"
colorscheme twilight
nnoremap <silent> <F9> :exec "color " .
    \ ((g:colors_name == "solarized") ? "twilight" : "solarized")<CR>

let mapleader=","
set gfn=Monaco:h15
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set mouse=a
set noswapfile
set nowb
set nobackup
set pastetoggle=<F2>
set nowrap                      "Don't wrap lines
set shiftround                  "When at 3 spaces and I hit >>, go to 4, not 5.
set grepprg=ack                 "Use Ack instead of grep
set wildmenu                    "tab completion in commands
set wildmode=list:full
set si                          "Smart indent

iabbrev flase false
iabbrev fasle false
iabbrev treu true
iabbrev shoudl should
iabbrev compnay company
iabbrev slef self


" ================ status line ========================
set laststatus=2
set statusline=\ "
set statusline+=%1*%-25.80f%*\ " file name minimum 25, maximum 80 (right justified)
set statusline+=%2*
set statusline+=%h "help file flag
set statusline+=%r "read only flag
set statusline+=%m "modified flag
set statusline+=%w "preview flag
set statusline+=%*\ "
set statusline+=%4*%{fugitive#statusline()}%*\ " Fugitive
set statusline+=%= " right align
set statusline+=%8*%-14.(%l,%c%V%)\ %<%P%* " offset

" http://amix.dk/vim/vimrc.html
" Return to last edit position when opening files
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif
" Remember info about open buffers on close
set viminfo^=%

" ================ focus for rspec tests ========================
command! ClearFocus :%s/, :focus => true//g
map <C-f> :%s/, :focus => true//g <CR>
map <C-b> :g/binding.pry/d<CR>:w<CR>
map <Leader>af :Ack focus spec/<CR>
map <Leader>f $bhha, :focus => true<esc>:w<CR>
map <Leader>so osave_and_open_page<esc>:w<CR>

map <Leader>ab :Ack binding<CR>

" factory girl build
map <Leader>fgb iFactoryGirl.build()<esc>i
" factory girl create
map <Leader>fgc iFactoryGirl.create()<esc>i
" hash rocket macro
map <Leader>h bi:<esc>ea => 
" pry macros
map <Leader>b obinding.pry<esc>:w<CR>
map <Leader>B Obinding.pry<esc>:w<CR>
" debugger macros
map <Leader>d odebugger<esc>:w<CR>
map <Leader>D Odebugger<esc>:w<CR>
" add single quotes
map <Leader>' <esc>bi'<esc>ea'
" add double quotes
map <Leader>" <esc>bi"<esc>ea"
" Rspec expectation
map <Leader>ex iexpect(expectation).to eq(<esc>F(lve
" No help
map <F1> <Esc>
" Move variable to let syntax
map <Leader>vl 0wilet(:<esc>ea)<esc>wr{A }<esc>

map <Leader>r :w\|!rspec %<cr>
map <Leader>rl :w\|:exe "!rspec % -l " . line('.')<cr>


" Remove trailing whitespace on save for ruby files.
" au BufWritePre *.rb :%s/\s\+$//e "

"copy to system clipboard hack
vmap <C-x> :!pbcopy<CR>
vmap <C-c> :w !pbcopy<CR><CR>

map <C-h> :nohl<cr>
map <C-s> <esc>:w<cr>

map <leader>{ a{{}}<esc>hi 

" Enable spellchecking for Markdown
autocmd FileType markdown setlocal spell

" Opens a new tab with the current buffer's path
" Super useful when editing files in the same directory
map <leader>te :tabedit <c-r>=expand("%:p:h")<cr>/
map <leader>vs :vs <c-r>=expand("%:p:h")<cr>/
map <leader>sp :vs <c-r>=expand("%:p:h")<cr>/

" ================ Scrolling ========================
set scrolloff=8                 "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

match ErrorMsg '\s\+$'          "http://www.bestofvim.com/tip/trailing-whitespace/
nnoremap <Leader>rtw :%s/\s\+$//e<CR>   "^^^^^^

" ================ Plugins ========================
" Fugitive {
    nnoremap <silent> <leader>gs :Gstatus<CR>
    nnoremap <silent> <leader>gd :Gdiff<CR>
    nnoremap <silent> <leader>gc :Gcommit<CR>
    nnoremap <silent> <leader>gb :Gblame<CR>
    nnoremap <silent> <leader>gl :Glog<CR>
    nnoremap <silent> <leader>gp :Git push<CR>
     "}
